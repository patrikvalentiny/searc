services:
  searc:
    build:
      context: .
      dockerfile: src/search-api/Dockerfile
    depends_on:
      searc-rabbitmq:
        condition: service_healthy
      searc-postgres:
        condition: service_healthy
    ports:
      - "${APP_PORT}:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      APP_PORT: ${APP_PORT}
      RABBITMQ_HOST: searc-rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      DB_HOST: searc-db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SEQ_URL: http://seq:5341
      ZIPKIN_URL: http://zipkin:9411/api/v2/spans
    networks:
      - searc-network
    restart: unless-stopped

  cleaner-service:
    build:
      context: .
      dockerfile: src/CleanerService/Dockerfile
    depends_on:
      cleaner-postgres:
        condition: service_healthy
      flyway-cleaner:
        condition: service_completed_successfully
      searc-rabbitmq:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      DB_CLEANER_HOST: cleaner-db
      DB_CLEANER_PORT: ${DB_CLEANER_PORT}
      DB_CLEANER_NAME: ${DB_CLEANER_NAME}
      DB_CLEANER_USER: ${DB_CLEANER_USER}
      DB_CLEANER_PASSWORD: ${DB_CLEANER_PASSWORD}
      APP_DATA_PATH: /data
      RABBITMQ_HOST: searc-rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      SEQ_URL: http://seq:5341
      ZIPKIN_URL: http://zipkin:9411/api/v2/spans
    networks:
      - searc-network
    volumes:
      - ./data:/data
    restart: no
