{
  "configuration" : { },
  "description" : "C4 model of the Searc email search system",
  "documentation" : { },
  "id" : 1,
  "lastModifiedAgent" : "structurizr-ui",
  "lastModifiedDate" : "2025-03-12T23:36:23Z",
  "model" : {
    "people" : [ {
      "description" : "A user who searches and downloads emails.",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "User",
      "properties" : {
        "structurizr.dsl.identifier" : "user"
      },
      "relationships" : [ {
        "description" : "Searches emails",
        "destinationId" : "21",
        "id" : "22",
        "sourceId" : "1",
        "tags" : "Relationship"
      }, {
        "description" : "Searches emails",
        "destinationId" : "3",
        "id" : "23",
        "linkedRelationshipId" : "22",
        "sourceId" : "1"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "description" : "Stores the raw Enron dataset in text files.",
      "documentation" : { },
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Raw Email Data (Filesystem)",
      "properties" : {
        "structurizr.dsl.identifier" : "filesystem"
      },
      "tags" : "Element,Software System"
    }, {
      "containers" : [ {
        "description" : "Stores searchable indexed email data.",
        "documentation" : { },
        "id" : "4",
        "name" : "Search Database",
        "properties" : {
          "structurizr.dsl.identifier" : "enronsystem.searchdatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "PostgreSQL"
      }, {
        "description" : "Stores indexed words, occurrences, and file references.",
        "documentation" : { },
        "id" : "5",
        "name" : "Indexer Database",
        "properties" : {
          "structurizr.dsl.identifier" : "enronsystem.indexdatabase"
        },
        "tags" : "Element,Container,Database",
        "technology" : "PostgreSQL"
      }, {
        "description" : "Message queue for cleaned emails from Cleaner to Indexer.",
        "documentation" : { },
        "id" : "6",
        "name" : "Cleaned Email Queue",
        "properties" : {
          "structurizr.dsl.identifier" : "enronsystem.cleanedqueue"
        },
        "tags" : "Element,Container,Queue",
        "technology" : "RabbitMQ"
      }, {
        "description" : "Message queue for indexed data from Indexer to Search API.",
        "documentation" : { },
        "id" : "7",
        "name" : "Indexed Data Queue",
        "properties" : {
          "structurizr.dsl.identifier" : "enronsystem.indexedqueue"
        },
        "tags" : "Element,Container,Queue",
        "technology" : "RabbitMQ"
      }, {
        "components" : [ {
          "description" : "Processes and cleans raw email files.",
          "documentation" : { },
          "id" : "9",
          "name" : "CleanerService",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.cleaner.cleanerservice"
          },
          "relationships" : [ {
            "description" : "Reads raw emails",
            "destinationId" : "2",
            "id" : "26",
            "sourceId" : "9",
            "tags" : "Relationship"
          }, {
            "description" : "Publishes cleaned emails",
            "destinationId" : "6",
            "id" : "29",
            "sourceId" : "9",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "C# Service"
        }, {
          "description" : "Publishes cleaned emails to RabbitMQ with topic 'CleanedFile'.",
          "documentation" : { },
          "id" : "10",
          "name" : "CleanedMessagePublisher",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.cleaner.messagepublisher"
          },
          "relationships" : [ {
            "description" : "Publishes messages",
            "destinationId" : "6",
            "id" : "31",
            "sourceId" : "10",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "EasyNetQ"
        } ],
        "description" : "Removes headers from raw emails and publishes cleaned content.",
        "documentation" : { },
        "id" : "8",
        "name" : "Cleaner Service",
        "properties" : {
          "structurizr.dsl.identifier" : "enronsystem.cleaner"
        },
        "relationships" : [ {
          "description" : "Reads raw emails",
          "destinationId" : "2",
          "id" : "27",
          "linkedRelationshipId" : "26",
          "sourceId" : "8"
        }, {
          "description" : "Publishes cleaned emails",
          "destinationId" : "6",
          "id" : "30",
          "linkedRelationshipId" : "29",
          "sourceId" : "8"
        } ],
        "tags" : "Element,Container",
        "technology" : ".NET Worker Service"
      }, {
        "components" : [ {
          "description" : "Processes cleaned emails and indexes words.",
          "documentation" : { },
          "id" : "12",
          "name" : "IndexerService",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.indexer.indexerservice"
          },
          "relationships" : [ {
            "description" : "Stores indexed words, occurrences, and files",
            "destinationId" : "5",
            "id" : "34",
            "sourceId" : "12",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "C# Service"
        }, {
          "description" : "Handles database operations for indexing words, occurrences, and files.",
          "documentation" : { },
          "id" : "13",
          "name" : "IndexerRepository",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.indexer.repository"
          },
          "tags" : "Element,Component",
          "technology" : "Dapper + PostgreSQL"
        }, {
          "description" : "Consumes cleaned email messages and triggers indexing.",
          "documentation" : { },
          "id" : "14",
          "name" : "IndexedFileHandler",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.indexer.messagehandler"
          },
          "relationships" : [ {
            "description" : "Consumes cleaned emails",
            "destinationId" : "6",
            "id" : "32",
            "sourceId" : "14",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "EasyNetQ"
        }, {
          "description" : "Publishes indexed email data to RabbitMQ.",
          "documentation" : { },
          "id" : "15",
          "name" : "IndexedMessagePublisher",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.indexer.messagepublisher"
          },
          "relationships" : [ {
            "description" : "Publishes indexed data",
            "destinationId" : "7",
            "id" : "36",
            "sourceId" : "15",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "EasyNetQ"
        } ],
        "description" : "Indexes cleaned emails into the database.",
        "documentation" : { },
        "id" : "11",
        "name" : "Indexer Service",
        "properties" : {
          "structurizr.dsl.identifier" : "enronsystem.indexer"
        },
        "relationships" : [ {
          "description" : "Consumes cleaned emails",
          "destinationId" : "6",
          "id" : "33",
          "linkedRelationshipId" : "32",
          "sourceId" : "11"
        }, {
          "description" : "Stores indexed words, occurrences, and files",
          "destinationId" : "5",
          "id" : "35",
          "linkedRelationshipId" : "34",
          "sourceId" : "11"
        }, {
          "description" : "Publishes indexed data",
          "destinationId" : "7",
          "id" : "37",
          "linkedRelationshipId" : "36",
          "sourceId" : "11"
        } ],
        "tags" : "Element,Container",
        "technology" : ".NET Worker Service"
      }, {
        "components" : [ {
          "description" : "Processes search requests from the frontend.",
          "documentation" : { },
          "id" : "17",
          "name" : "SearchController",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.searchapi.searchcontroller"
          },
          "tags" : "Element,Component",
          "technology" : "C# Controller"
        }, {
          "description" : "Handles search logic and interacts with the repository.",
          "documentation" : { },
          "id" : "18",
          "name" : "SearchService",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.searchapi.searchservice"
          },
          "relationships" : [ {
            "description" : "Updates search data",
            "destinationId" : "4",
            "id" : "40",
            "sourceId" : "18",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "C# Service"
        }, {
          "description" : "Performs database queries for search operations.",
          "documentation" : { },
          "id" : "19",
          "name" : "SearchRepository",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.searchapi.searchrepository"
          },
          "tags" : "Element,Component",
          "technology" : "Dapper + PostgreSQL"
        }, {
          "description" : "Consumes indexed email data and updates the search database.",
          "documentation" : { },
          "id" : "20",
          "name" : "IndexedFileDTOHandler",
          "properties" : {
            "structurizr.dsl.identifier" : "enronsystem.searchapi.indexedfilehandler"
          },
          "relationships" : [ {
            "description" : "Consumes indexed data",
            "destinationId" : "7",
            "id" : "38",
            "sourceId" : "20",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component",
          "technology" : "EasyNetQ"
        } ],
        "description" : "Handles search queries and retrieves results from the database.",
        "documentation" : { },
        "id" : "16",
        "name" : "Search API",
        "properties" : {
          "structurizr.dsl.identifier" : "enronsystem.searchapi"
        },
        "relationships" : [ {
          "description" : "Retrieves search results",
          "destinationId" : "4",
          "id" : "25",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "Consumes indexed data",
          "destinationId" : "7",
          "id" : "39",
          "linkedRelationshipId" : "38",
          "sourceId" : "16"
        } ],
        "tags" : "Element,Container",
        "technology" : "ASP.NET Core Web API"
      }, {
        "description" : "Allows users to search for emails.",
        "documentation" : { },
        "id" : "21",
        "name" : "Web UI",
        "properties" : {
          "structurizr.dsl.identifier" : "enronsystem.ui"
        },
        "relationships" : [ {
          "description" : "Sends search queries",
          "destinationId" : "16",
          "id" : "24",
          "sourceId" : "21",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "React + ShadCN"
      } ],
      "description" : "Processes, indexes, and provides search over the Enron email dataset.",
      "documentation" : { },
      "id" : "3",
      "location" : "Unspecified",
      "name" : "Searc System",
      "properties" : {
        "structurizr.dsl.identifier" : "enronsystem"
      },
      "relationships" : [ {
        "description" : "Reads raw emails",
        "destinationId" : "2",
        "id" : "28",
        "linkedRelationshipId" : "26",
        "sourceId" : "3"
      } ],
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Searc",
  "properties" : {
    "structurizr.dsl" : ""
  },
  "views" : {
    "componentViews" : [ {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "8",
      "description" : "Detailed view of the Cleaner Service components.",
      "dimensions" : {
        "height" : 1411,
        "width" : 1620
      },
      "elements" : [ {
        "id" : "2",
        "x" : 969,
        "y" : 771
      }, {
        "id" : "6",
        "x" : 969,
        "y" : 171
      }, {
        "id" : "9",
        "x" : 219,
        "y" : 771
      }, {
        "id" : "10",
        "x" : 219,
        "y" : 171
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "cleaner_component_diagram",
      "order" : 3,
      "relationships" : [ {
        "id" : "26"
      }, {
        "id" : "29"
      }, {
        "id" : "31"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "11",
      "description" : "Detailed view of the Indexer Service components.",
      "dimensions" : {
        "height" : 2611,
        "width" : 1620
      },
      "elements" : [ {
        "id" : "5",
        "x" : 970,
        "y" : 172
      }, {
        "id" : "6",
        "x" : 970,
        "y" : 1372
      }, {
        "id" : "7",
        "x" : 970,
        "y" : 1972
      }, {
        "id" : "12",
        "x" : 220,
        "y" : 172
      }, {
        "id" : "13",
        "x" : 220,
        "y" : 772
      }, {
        "id" : "14",
        "x" : 220,
        "y" : 1372
      }, {
        "id" : "15",
        "x" : 220,
        "y" : 1972
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "indexer_component_diagram",
      "order" : 4,
      "relationships" : [ {
        "id" : "32"
      }, {
        "id" : "34"
      }, {
        "id" : "36"
      } ]
    }, {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "16",
      "description" : "Detailed view of the Search API components.",
      "dimensions" : {
        "height" : 2611,
        "width" : 1620
      },
      "elements" : [ {
        "id" : "4",
        "x" : 970,
        "y" : 772
      }, {
        "id" : "7",
        "x" : 970,
        "y" : 1972
      }, {
        "id" : "17",
        "x" : 220,
        "y" : 172
      }, {
        "id" : "18",
        "x" : 220,
        "y" : 772
      }, {
        "id" : "19",
        "x" : 220,
        "y" : 1372
      }, {
        "id" : "20",
        "x" : 220,
        "y" : 1972
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "searchapi_component_diagram",
      "order" : 5,
      "relationships" : [ {
        "id" : "38"
      }, {
        "id" : "40"
      } ]
    } ],
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "system_context",
      "metadataSymbols" : "SquareBrackets",
      "styles" : {
        "elements" : [ {
          "background" : "#ba1e75",
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "background" : "#d92389",
          "tag" : "Software System"
        }, {
          "background" : "#f8289c",
          "tag" : "Container"
        }, {
          "background" : "#f572c1",
          "tag" : "Component"
        }, {
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#6b9ae5",
          "color" : "#ffffff",
          "shape" : "Pipe",
          "tag" : "Queue"
        } ]
      },
      "terminology" : { },
      "themes" : [ "https://static.structurizr.com/themes/default/theme.json" ]
    },
    "containerViews" : [ {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "description" : "Structured flow of the Searc system from top to bottom.",
      "dimensions" : {
        "height" : 2691,
        "width" : 3870
      },
      "elements" : [ {
        "id" : "1",
        "x" : 620,
        "y" : 151
      }, {
        "id" : "2",
        "x" : 3220,
        "y" : 2051
      }, {
        "id" : "4",
        "x" : 220,
        "y" : 2051
      }, {
        "id" : "5",
        "x" : 1720,
        "y" : 2051
      }, {
        "id" : "6",
        "x" : 2470,
        "y" : 2051
      }, {
        "id" : "7",
        "x" : 970,
        "y" : 2051
      }, {
        "id" : "8",
        "x" : 2470,
        "y" : 1451
      }, {
        "id" : "11",
        "x" : 1720,
        "y" : 1451
      }, {
        "id" : "16",
        "x" : 595,
        "y" : 1451
      }, {
        "id" : "21",
        "x" : 595,
        "y" : 851
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "container_diagram",
      "order" : 2,
      "relationships" : [ {
        "id" : "22"
      }, {
        "id" : "24"
      }, {
        "id" : "25"
      }, {
        "id" : "27"
      }, {
        "id" : "30"
      }, {
        "id" : "33"
      }, {
        "id" : "35"
      }, {
        "id" : "37"
      }, {
        "id" : "39"
      } ],
      "softwareSystemId" : "3"
    } ],
    "systemContextViews" : [ {
      "automaticLayout" : {
        "applied" : true,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "LeftRight",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "dimensions" : {
        "height" : 800,
        "width" : 2300
      },
      "elements" : [ {
        "id" : "1",
        "x" : 199,
        "y" : 165
      }, {
        "id" : "2",
        "x" : 1649,
        "y" : 215
      }, {
        "id" : "3",
        "x" : 899,
        "y" : 215
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "system_context",
      "order" : 1,
      "relationships" : [ {
        "id" : "23"
      }, {
        "id" : "28"
      } ],
      "softwareSystemId" : "3"
    } ]
  }
}