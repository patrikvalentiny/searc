services:
  bizcord-postgres:
    image: postgres:latest
    container_name: user-management-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - user-management-network
    restart: unless-stopped

  bizcord-rabbitmq:
    image: rabbitmq:3-management
    container_name: "bizcord-rabbitmq"
    hostname: "bizcord-rabbitmq"
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    networks:
      - user-management-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
  bizcord-user-management-microservice:
    build:
      context: ../../
      dockerfile: apps/user-management-microservice/Dockerfile
    depends_on:
      bizcord-rabbitmq:
        condition: service_healthy
    ports:
      - "${APP_PORT}:8080"
    environment:
      APP_PORT: ${APP_PORT}
      RABBITMQ_HOST: bizcord-rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - user-management-network
    restart: unless-stopped

  structurizr-lite:
    image: structurizr/lite
    container_name: structurizr-lite
    ports:
      - "8080:8080"
    volumes:
      - ./structurizr:/usr/local/structurizr
    networks:
      - user-management-network
    restart: unless-stopped

networks:
  user-management-network:
    driver: bridge

volumes:
  postgres_data: